generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model BorrowedBook {
  id        Int      @id @unique @default(autoincrement())
  idBook    String   @unique
  borrow_at DateTime @default(now())
  return_at String
  status    Boolean  @default(true)
  borrower  String
  imgURL    String
}

model User {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique

  loans Borrow[]
}

model Book {
  id       Int    @id @default(autoincrement())
  title    String
  authors  String
  bookId   String
  category String
  image    String
  stock    Int
  borrowId Int?

  borrow Borrow? @relation(fields: [borrowId], references: [id])

  @@index([borrowId])
}

model Borrow {
  id        Int      @id @default(autoincrement())
  name      String
  borrow_at DateTime @default(now())
  done_at   DateTime
  books     Book[]
  coverUrl  String?
  title     String?
  userId    Int?
  returnId  Int?
  notes     String?
  status    Boolean  @default(true)

  user   User?   @relation(fields: [userId], references: [id])
  return Return? @relation(fields: [returnId], references: [id])

  @@index([userId])
  @@index([returnId])
}

model Return {
  id        Int      @id @default(autoincrement())
  return_at DateTime @default(now())

  loan Borrow[]
}

model Category {
  id       Int    @id @default(autoincrement())
  category String
}

model Image {
  id     Int    @id @default(autoincrement())
  bookId String
  path   String
}
